<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="jxau.spms.dao"><!-- namespace必须是与接口的包路径一致，不然会报错误 -->

    <!--<cache eviction="FIFO" flushInterval="60000" size="512" readOnly="true" /> --><!-- Mybaties内置二级缓存 -->
    <!-- 查询返回集合类型的配置 -->
    <!-- 查询返回集合类型的配置 -->
    <!-- 使用第三方缓存插件实现二级缓存-->
   
    <!--获取学生开题报告-->
    <select id="selectStuReport" parameterType="java.util.Map"  resultType="jxau.spms.common.vo.ReportInfoVo">
		select si.subName,ri.reportNo,si.studentNo,sb.studentName,ri.uploadTime,ri.exameState,ri.reportName
		from report_info ri 
		inner join subject_info si 
		on si.studentNo = ri.studentNo 
		inner join stu_basic_info sb
		on sb.studentNo = ri.studentNo
		where ri.tutorNo = #{tutorNo}
		<if test="reportTerm != null">
			and ri.reportTerm = #{reportTerm}
		</if>
		<if test="start != null">
			limit #{start},#{number}
		</if>
		;
    </select>
    <!--获取开题报告的数量-->
    <select id="selectReportNum" parameterType="java.util.Map"  resultType="int">
		select count(*) from report_info ri inner join stu_basic_info sb
		on sb.studentNo = ri.studentNo
		inner join subject_info si 
		on si.studentNo = ri.studentNo 
		where ri.tutorNo = #{tutorNo}
		<if test="reportTerm != null">
			and ri.reportTerm = #{reportTerm}
		</if>
		;
    </select>
     <!--学生获取任务书信息-->
    <select id="selectTaskInfo" parameterType="java.util.Map"  resultType="jxau.spms.common.vo.TaskInfoVo">
		select si.subName,ti.content,ti.diagram,ti.indicator,ti.schedule,ti.reference
		from subject_info si inner join task_info ti
		on si.subjectNo = ti.subjectNo
		where
		<if test="term != null">
			si.subTerm = #{term} and
		</if>
			si.studentNo = #{studentNo}
		;
    </select>
    <!--获取导师编号-->
     <select id="selectTutorNo" parameterType="java.util.Map"  resultType="String">
		select tutorNo from stu_basic_info where studentNo = #{studentNo};
    </select>
    <!--判断开题报告是够存在-->
     <select id="repExistOrNot" parameterType="java.util.Map"  resultType="int">
		select count(*) from report_info where 
		studentNo = #{studentNo} and reportTerm = #{reportTerm};
    </select>
     <!--导师审核开题报告信息-->
    <update id="verifyReportInfo" parameterType="java.util.Map">
		update report_info set 
		<if test="exameState != null">
			exameState = #{exameState} 
		</if>
		where reportNo = #{reportNo};
    </update>
     <!--学生上传开题报告信息-->
    <insert id="addReportInfo" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="reportNo">
		insert into report_info values
			(null,#{studentNo},#{tutorNo},#{uploadTime},
			 #{exameState},#{memo},#{reportTerm},#{reportName});
    </insert>
     <!--删除开题报告信息-->
    <delete id="deleteReportInfo" parameterType="java.util.Map">
		delete from report_info where
		studentNo = #{studentNo} and reportTerm = #{reportTerm};
    </delete>
    <!--学生上传论文信息-->
    <insert id="addPaperInfo" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="paperNo">
		insert into paper_info values
			(null,#{studentNo},#{uploadTime},
			 #{exameState},#{memo},#{paperTerm},#{paperName});
    </insert>
    <!--判断论文信息是否存在-->
     <select id="paperExistOrNot" parameterType="java.util.Map"  resultType="int">
		select count(*) from paper_info where 
		studentNo = #{studentNo} and paperTerm = #{paperTerm};
    </select>
    <!--删除论文信息-->
    <delete id="deletePaperInfo" parameterType="java.util.Map">
		delete from paper_info where
		studentNo = #{studentNo} and paperTerm = #{paperTerm};
    </delete>
    <!--导师添加任务书信息-->
    <insert id="addTaskInfo" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="taskNo">
		insert into task_info values
			(null,#{subjectNo},#{content},#{diagram},
			 #{indicator},#{schedule},#{reference});
    </insert>
</mapper>
